@using MatBlazor
@using Gallery.Data
@using Gallery.Database
@inject NavigationManager Navigation

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Gallery</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            <MatNavMenu>
                <MatNavSubMenu @bind-Expanded="@albumMenuOpened">
                    <MatNavSubMenuHeader>
                        <MatNavItem AllowSelection="false"><MatIcon Icon="perm_media"></MatIcon>&nbsp;&nbsp;Albums</MatNavItem>
                    </MatNavSubMenuHeader>
                    <MatNavSubMenuList>
                        @foreach (GAlbum a in DB.Albums.Values.Where(x => x.isPublic && !x.isNsfw && x.subAlbum == 0))
                        {
                            IEnumerable<GAlbum> subs = DB.Albums.Values.Where(x => x.subAlbum == a.id);
                            if (subs.Count() == 0)
                            {
                                <div @onclick="(() => GoToPage(a.id))"><MatNavItem Href="@("/album/" + a.id.ToString() + "?")">• @a.name</MatNavItem></div>
                            }
                            else
                            {
                                <MatNavSubMenu Class="navmenu-sub">
                                    <MatNavSubMenuHeader>
                                        <MatNavItem AllowSelection="false">@a.name</MatNavItem>
                                    </MatNavSubMenuHeader>
                                    <MatNavSubMenuList>
                                        <a @onclick="(() => GoToPage(a.id))"><MatNavItem Id="navitem">• @a.name</MatNavItem></a>
                                        @foreach (GAlbum sa in subs)
                                        {
                                            <a @onclick="(() => GoToPage(sa.id))"><MatNavItem Id="navitem">• @sa.name</MatNavItem></a>
                                        }
                                    </MatNavSubMenuList>
                                </MatNavSubMenu>
                            }
                        }
                    </MatNavSubMenuList>
                </MatNavSubMenu>
            </MatNavMenu>

        </li>
    </ul>
    <UserMenu />
</div>

<style>
    .mdc-nav-item {
        color: white !important;
    }

    .mdc-sub-menu-icon {
        color: rgb(202,197,197);
    }

    .mat-accordion .mat-expansion-panel.mat-expansion-panel--expanded .mat-expansion-panel__summary .after {
        color: white;
    }

    .navmenu-sub .after {
        display: none !important;
    }

    .mat-expansion-panel--expanded {
        background-color: rgba(0,0,0,0.22) !important;
    }

    .navmenu-sub {
        margin-top: 0rem !important;
        margin-bottom: 0rem !important;
    }

    .px-3 {
        padding: 5px !important;
    }

    .mat-expansion-panel:not(:first-child) .mdc-nav-item:before {
        content: '˃  ' !important;
    }

    .mat-expansion-panel--expanded:not(:first-child) .mdc-nav-item:before {
        content: '˅  ' !important;
    }

    /* User menu css */
    .usermenu {
    color: white;
}
.menuicon-fav {
    margin-top: 5px;
    margin-bottom: 5px;
    margin-left: 15px;
 color: rgb(242,47,167) !important;   
}
.menuicon-set {
    color: rgb(110,110,229) !important; 
}
.menuicon-login {
    color: rgb(35,196,35) !important; 
}
.menuicon-logout {
    color: rgb(221,51,51) !important; 
}
.usermenu img {
    max-width: 64px;
    max-height: 64px;
    margin-left: 5px;
    margin-right: 5px;
}
html {
    background-color: #15202b;
}

.mat-tooltip {
    margin-top: 10px;
    background-color: #282828;
}

form {
    display: inline;
}

</style>

@code {
    bool collapseNavMenu = true;
    bool albumMenuOpened = true;
    string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    [CascadingParameter]
    private Session Session { get; set; }

    void GoToPage(int path)
    {
        Navigation.NavigateTo("/album/" + path.ToString());
    }

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
