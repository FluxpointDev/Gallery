@page "/"
@using MatBlazor
@using Gallery.Data
@using Gallery.Database

<AuthorizeView>
    <Authorized>
        <h1>Hello @context.User.Identity.Name!</h1>
        You are logged in. 🎉🎉🎉

    </Authorized>
    <NotAuthorized>
        <h1>Hello random user</h1>
        0_o
    </NotAuthorized>
</AuthorizeView>

<div class="mat-layout-grid">
    <div class="mat-layout-grid-inner">
        @if (Albums != null)
        {
        @foreach (GAlbum a in Albums)
        {
        <div class="mat-layout-grid-cell">
            <MatCard class="demo-mat-card">
                <MatRipple>
                    <a href="@("/album/" + a.id.ToString())">
                        <MatCardContent>
                            <MatCardMedia Wide="true" Style="width:320px;" ImageUrl="@a.GetThumbnailImage()"></MatCardMedia>

                            <div class="demo-mat-card-content">
                                <MatHeadline6 class="demo-mat-card-clean-margin">
                                    @if (a.isNsfw)
                                    {
                                        @(@a.name + " (Nsfw)")
                                    }
                                    else
                                    {
                                        @a.name
                                    }

                                </MatHeadline6>
                            </div>
                        </MatCardContent>
                    </a>
                </MatRipple>
            </MatCard>
        </div>
        }
        }
    </div>
</div>

<style>
    .demo-mat-card {
        max-width: 320px;
         text-align: center;
    background-color: #343a40;
    }

    .demo-mat-card-content {
        padding: 1rem;
    }

    .demo-mat-card-clean-margin {
        margin: 0px;
    }
</style>

@code {
    List<GAlbum> Albums = null;

    [CascadingParameter]
    private Session Session { get; set; }

    protected override void OnInitialized()
    {
            Albums = DB.Albums.Values.Where(x => x.subAlbum == 0 && x.HasAccess(Session)).OrderBy(x => x.name).ToList();
    }
}