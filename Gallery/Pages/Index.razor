@page "/"
@using MatBlazor
@using Gallery.Data
@using Gallery.Database


<AuthorizeView>
    <Authorized>
        <h1>Hello @context.User.Identity.Name!</h1>
        You are logged in. 🎉🎉🎉

    </Authorized>
    <NotAuthorized>
        <h1>Hello random user</h1>
        0_o
    </NotAuthorized>
</AuthorizeView>

        @if (Albums != null)
        {
            <div class="ggrid">
        @foreach (GAlbum a in Albums)
        {
            <a href="@("/album/" + a.id.ToString())">
                <div class="galbum">
                    <div class="galbum-inner" style="background-image: url('@a.GetThumbnailImage()'), linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.3));">
                        <div class="gablum-header">
                            @if (a.isNsfw)
                            {
                                  <span class="iconify" data-icon="mdi:folder-heart" style="color: #c07ec8;"></span>
                        <h3 class="gablum-title">@a.name <p class="galbum-badge galbum-badge-nsfw">Nsfw</p>   </h3>
                           
                            }
                            else if (!a.isPublic)
                            {
                                <span class="iconify" data-icon="mdi:folder-star" style="color: #fab13e;"></span>
                        <h3 class="gablum-title">@a.name <p class="galbum-badge galbum-badge-private">Private</p></h3>
                        
                            }
                            else
                            {
                                 <span class="iconify" data-icon="mdi:folder" style="color: #7489d8;"></span>
                          <h3 class="gablum-title">@a.name</h3>         
                             }
                    </div>
                    </div>
               </div>
           </a>

        }
         </div>
        }


@code {
    List<GAlbum> Albums = null;

    [CascadingParameter]
    private Session Session { get; set; }

    protected override void OnInitialized()
    {
            Albums = DB.Albums.Values.Where(x => x.subAlbum == 0 && x.HasAccess(Session)).OrderBy(x => x.name).ToList();
    }
}